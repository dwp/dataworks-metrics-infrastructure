meta:
  plan:
    terraform-bootstrap:
      task: terraform-bootstrap
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: dwpdigital/jinja-yaml-aws
            version: 0.0.5
            tag: 0.0.5
        run:
          path: sh
          args:
            - -exc
            - |
              python bootstrap_terraform.py
              sed -i '/^assume_role/ d' terraform/deploy/terraform.tfvars
              cp terraform/deploy/terraform.tf ../terraform-config
              cp terraform/deploy/terraform.tfvars ../terraform-config
          dir: dataworks-metrics-infrastructure
        inputs:
          - name: dataworks-metrics-infrastructure
        outputs:
          - name: terraform-config
      params:
        AWS_ACCESS_KEY_ID: ((ci.aws_access_key_id))
        AWS_SECRET_ACCESS_KEY: ((ci.aws_secret_access_key))
        AWS_REGION: eu-west-2

    terraform-plan:
      task: terraform-plan
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ((terraform.repository))
            version: ((terraform12.version))
            tag: ((terraform12.version))
        params:
          AWS_ACCESS_KEY_ID: ((ci.aws_access_key_id))
          AWS_SECRET_ACCESS_KEY: ((ci.aws_secret_access_key))
          TF_INPUT: false
          TF_CLI_ARGS_apply: -lock-timeout=300s
          TF_CLI_ARGS_plan: -lock-timeout=300s
          TF_VAR_slack_webhook_url: ((slack.webhook_url))
        run:
          path: sh
          dir: aws-concourse/terraform/deploy
          args:
            - -exc
            - |
              cp ../../../terraform-config/terraform.tf .
              cp ../../../terraform-config/terraform.tfvars .
              terraform init
              terraform workspace show
              terraform plan -detailed-exitcode
        inputs:
          - name: aws-concourse
          - name: terraform-config
