jobs:
  - name: management
    plan:
      - get: dataworks-metrics-infrastructure
        passed:
        - management-dev
        trigger: true
      - get: dataworks-dashboards
        passed:
        - management-dev
        trigger: true

      - .: (( inject meta.plan.terraform-bootstrap ))
        params:
          TF_WORKSPACE: management

      - .: (( inject meta.plan.terraform-apply ))
        params:
          TF_WORKSPACE: management

      - .: (( inject meta.plan.terraform-plan ))
        params:
          TF_WORKSPACE: management

      - .: (( inject meta.plan.cycle-containers ))
        task: trigger-outofband-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: outofband

      - .: (( inject meta.plan.cycle-containers ))
        task: trigger-prometheus-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: prometheus
      
      - .: (( inject meta.plan.trigger-deployment ))
        task: trigger-grafana-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: grafana

      - .: (( inject meta.plan.trigger-deployment ))
        task: trigger-thanos-query-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: thanos-query

      - .: (( inject meta.plan.trigger-deployment ))
        task: trigger-thanos-ruler-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: thanos-ruler

      - .: (( inject meta.plan.trigger-deployment ))
        task: trigger-alertmanager-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: alertmanager

      - .: (( inject meta.plan.trigger-deployment ))
        task: trigger-cloudwatch-exporter-deployment
        params:
          AWS_ROLE_ARN: arn:aws:iam::((aws_account.management)):role/ci
          CLUSTER: main
          SERVICE: cloudwatch-exporter
