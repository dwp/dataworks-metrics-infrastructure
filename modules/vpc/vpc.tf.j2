data "aws_availability_zones" "current" {}

{% for value in roles %}
module "monitoring_{{value}}_vpc" {
  source                                     = "dwp/vpc/aws"
  version                                    = "3.0.10"
  vpc_name                                   = "monitoring-{{value}}"
  region                                     = var.region
  vpc_cidr_block                             = var.vpc_cidr_block.mon-{{value}}-vpc
  interface_vpce_source_security_group_ids   = [{% if value ==Â "master" %}
                                                 var.interface_vpce_source_security_group_ids[0],
                                                 var.interface_vpce_source_security_group_ids[1],
                                                 var.interface_vpce_source_security_group_ids[2],
                                                 var.interface_vpce_source_security_group_ids[3],
                                                 var.interface_vpce_source_security_group_ids[4],
                                                 var.interface_vpce_source_security_group_ids[7],
                                                 var.interface_vpce_source_security_group_ids[8],
                                                 var.interface_vpce_source_security_group_ids[9]
                                            {% else %}
                                                {% if roles[0] == "slave" %}
                                                 var.interface_vpce_source_security_group_ids[0],
                                                 var.interface_vpce_source_security_group_ids[1],
                                                 var.interface_vpce_source_security_group_ids[2],
                                                 var.interface_vpce_source_security_group_ids[3],
                                                 var.interface_vpce_source_security_group_ids[4],
                                                 var.interface_vpce_source_security_group_ids[5]
                                                {% else %}
                                                 var.interface_vpce_source_security_group_ids[5],
                                                 var.interface_vpce_source_security_group_ids[6],
                                                 var.interface_vpce_source_security_group_ids[7],
                                                 var.interface_vpce_source_security_group_ids[8],
                                                 var.interface_vpce_source_security_group_ids[9],
                                                {% endif %}
                                                {% endif %}]
  interface_vpce_subnet_ids                  = aws_subnet.monitoring_{{value}}_private.*.id
  gateway_vpce_route_table_ids               = aws_route_table.monitoring_{{value}}_private.*.id
  common_tags                                = var.common_tags

  aws_vpce_services = [
   "acm-pca",
   "ec2",
   "ec2messages",
   "kms",
   "logs",
   "monitoring",
   "s3",
   "ssm",
   "ssmmessages",
   "secretsmanager",
   "ecr.api",
   "ecr.dkr",
   "ecs",
   "ecs-agent",
   "ecs-telemetry",
   "elasticmapreduce"
  ]
}

resource "aws_subnet" "monitoring_{{value}}_private" {
  count                = var.zone_count
  cidr_block           = cidrsubnet(module.monitoring_{{value}}_vpc.vpc.cidr_block, var.subnets.private.newbits, var.subnets.private.netnum + count.index)
  vpc_id               = module.monitoring_{{value}}_vpc.vpc.id
  availability_zone_id = data.aws_availability_zones.current.zone_ids[count.index]
  tags                 = merge(var.common_tags, { Name = "${var.name}-private-${var.zone_names[count.index]}" })
}

resource "aws_route_table" "monitoring_{{value}}_private" {
  count  = var.zone_count
  vpc_id = module.monitoring_{{value}}_vpc.vpc.id
  tags   = merge(var.common_tags, { Name = "${var.name}-private-${var.zone_names[count.index]}" })
}

resource "aws_route_table_association" "monitoring_{{value}}_private" {
  count          = var.zone_count
  route_table_id = aws_route_table.monitoring_{{value}}_private[count.index].id
  subnet_id      = aws_subnet.monitoring_{{value}}_private[count.index].id
}
{% endfor %}
resource "null_resource" "dummy" {}
